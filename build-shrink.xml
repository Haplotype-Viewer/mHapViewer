<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ The MIT License (MIT)
 ~
 ~ Copyright (c) 2007-2017 Broad Institute
 ~
 ~ Permission is hereby granted, free of charge, to any person obtaining a copy
 ~ of this software and associated documentation files (the "Software"), to deal
 ~ in the Software without restriction, including without limitation the rights
 ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 ~ copies of the Software, and to permit persons to whom the Software is
 ~ furnished to do so, subject to the following conditions:
 ~
 ~ The above copyright notice and this permission notice shall be included in
 ~ all copies or substantial portions of the Software.
 ~
 ~
 ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 ~ THE SOFTWARE.
  -->

<!-- Ant build script to create a signed, unified IGV JAR, shrunk with BCEL.
     This is difficult to do in Gradle so it's handled here.
     
     We may eventually switch to a different method (e.g. ProGuard) that makes
     this unnecessary.
  -->
<project name="igv-release" default="allBuild" basedir=".">
    <!-- build specific properties.  Generally set through Jenkins, command line, or properties file-->
    <property name="build-number" value="0"/>
    <property name="version" value="user"/>
    <property name="vendor" value="user"/>

    <property name="include.libs" value="true" />
    <property name="main-class" value="org.broad.igv.ui.Main"/>

    <property name="lib.dir" value="${basedir}/lib/"/>
    <property name="tmp.dir" value="${basedir}/build/tmp/IGV-dist"/>
    <property name="jar.name" value="igv.jar"/>
    <property name="dist.dir" value="build/IGV-dist/"/>
    <property name="jar.path" value="${dist.dir}${jar.name}"/>

    <property name="batik-codec-finame" value="batik-codec-1.10.jar" />
    <property name="goby-io-finame" value="goby-io-igv-1.1.jar" />
    <property name="log4j-core-finame" value="log4j-core-2.11.0.jar" />
    
    <!-- These paths are dictated by Gradle. -->
    <property name="class.dir" value="build/classes/java/main" />
    <property name="resource.dir" value="build/resources/main" />

    <condition property="act.include.libs">
        <and>
            <available classname="org.apache.tools.ant.util.depend.bcel.FullAnalyzer" />
            <istrue value="${include.libs}" />
        </and>
    </condition>

    <!-- Unzip jars to the tmp directory and copy IGV classes & resources.  Could do 
         this step in Gradle, but may not be required in the future (ProGuard can work
         on jars directly, for example). 
    -->
    <target name="prepare" if="act.include.libs">
        <mkdir dir="${dist.dir}" />
        <unzip dest="${tmp.dir}">
            <!-- Copy almost everything to tmp directory
            Certain jars we include whole, because we need their manifests
            Goby get copied later.
            Certain jars we just want to ignore (junit, appbundler). 
            -->
            <patternset>
                <include name="**/*"/>
                <exclude name="META-INF/**"/>
                <exclude name="${lib.dir}/*"/>
            </patternset>
            <fileset dir="${lib.dir}">
                <include name="**/*.jar"/>
                <exclude name="appbundler*.jar"/>
                <exclude name="**/*junit*.jar"/>
                <exclude name="**/${batik-codec-finame}"/>
                <exclude name="**/${goby-io-finame}"/>
                <exclude name="**/${log4j-core-finame}"/>
                <exclude name="**/*AppleJavaExtensions.jar"/>
            </fileset>
        </unzip>

        <copy todir="${tmp.dir}">
            <fileset dir="${class.dir}" includes="**/*" />
        </copy>
        <copy todir="${tmp.dir}">
            <fileset dir="${resource.dir}" includes="**/*" />
        </copy>
    </target>

    <target name="shrinkJar" depends="prepare" if="act.include.libs" 
            description="Build the unified IGV JAR, including libraries, using BCEL to take only required classes">
        
        <classfileset dir="${tmp.dir}" id="rootFiles">
            <rootfileset dir="${tmp.dir}" includes="org/broad/**/*.class" />
        </classfileset>

        <property name="class-path" value="${batik-codec-finame} ${goby-io-finame} ${log4j-core-finame}" />

        <jar destfile="${jar.path}" basedir="${tmp.dir}" compress="true" duplicate="preserve">
            <fileset refid="rootFiles"/>
            <manifest>

                <attribute name="Permissions" value="all-permissions"/>
                <attribute name="Application-Name" value="IGV"/>
                <!-- Here just to be a good citizen. Apparently reading from the correct manifest
                is tricky. We rely on a separate properties file-->
                <attribute name="Class-Path" value="${class-path}"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-Class" value="${main-class}"/>

                <section name="org/broad/igv/">
                    <attribute name="Specification-Title" value="IGV"/>
                    <attribute name="Specification-Version" value="${version}"/>
                    <attribute name="Specification-Vendor" value="${vendor}"/>
                    <attribute name="Implementation-Version" value="${version} ${build-number}"/>
                    <attribute name="Implementation-Vendor" value="${vendor}"/>
                </section>

            </manifest>
        </jar>
        <delete dir="${tmp.dir}" />
        <copy file="${lib.dir}${batik-codec-finame}" tofile="${dist.dir}${batik-codec-finame}" overwrite="true"/>
        <copy file="${lib.dir}${goby-io-finame}" tofile="${dist.dir}${goby-io-finame}" overwrite="true"/>
        <copy file="${lib.dir}${log4j-core-finame}" tofile="${dist.dir}${log4j-core-finame}" overwrite="true"/>
    </target>

    <!--Add permissions attribute to manifest of jars -->
    <!-- We use exec because it's easier, this will only run on *nix-->
    <macrodef name="addPermsMacro">
        <attribute name="jarfile"/>
        <sequential>
            <!--Newline is important!-->
            <echo file="tmp.txt">Permissions: all-permissions${line.separator}</echo>
            <exec executable="jar">
                <arg value="ufm"/>
                <arg value="@{jarfile}"/>
                <arg value="tmp.txt"/>
            </exec>
            <delete file="tmp.txt"/>
        </sequential>
    </macrodef>

    <target name="addPerms">
        <addPermsMacro jarfile="${dist.dir}${batik-codec-finame}"/>
        <addPermsMacro jarfile="${dist.dir}${goby-io-finame}"/>
        <addPermsMacro jarfile="${dist.dir}${log4j-core-finame}"/>
    </target>

    <target name="allBuild" depends="shrinkJar,addPerms">
        <copy file="scripts/java8/igv.sh" todir="${dist.dir}" />
        <copy file="scripts/java8/igv.bat" todir="${dist.dir}" />
        <copy file="scripts/java8/igv.command" todir="${dist.dir}" />
        <chmod perm="775" file="${dist.dir}igv.sh" />
        <chmod perm="775" file="${dist.dir}igv.command" />
     </target>
</project>